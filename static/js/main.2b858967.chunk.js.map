{"version":3,"sources":["logo.svg","SetState/TestComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TestComponent","args","state","dollars","_saveButtonRef","btn","_btnRef","forEach","propToBind","bind","this","addEventListener","_onMouseLeaveHandler","setTimeout","_onTimeoutHandler","fetch","then","_onAjaxCallback","console","log","JSON","stringify","ref","onClick","_onClickHandler","setState","response","status","statusText","React","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,G,MAAA,IAA0B,kC,2CC8F1BA,E,kDA3FX,aAAsB,IAAD,iDAANC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJC,MAAQ,CACXC,QAAS,IAEX,EAAKC,eAAkB,SAAAC,GAAS,EAAKC,QAAUD,GAC/C,CACE,oBACA,uBACA,kBACA,mBACAE,SAAQ,SAAAC,GACR,EAAKA,GAAc,EAAKA,GAAYC,KAAjB,mBAZF,E,gEA0BnBC,KAAKJ,QAAQK,iBAAiB,aAAcD,KAAKE,sBAMjDC,WAAWH,KAAKI,kBAAmB,KAGnCC,MAAM,gCACHC,KAAKN,KAAKO,mB,+BAMb,OAFAC,QAAQC,IAAI,oBAAsBC,KAAKC,UAAUX,KAAKR,QAGnD,wBACEoB,IAAKZ,KAAKN,eACVmB,QAASb,KAAKc,gBAFhB,0B,wCAQa,IAAD,OACbN,QAAQC,IAAI,mCAAqCC,KAAKC,UAAUX,KAAKR,QACrEQ,KAAKe,SAAS,CACdtB,QAASO,KAAKR,MAAMC,QAAU,KAC3B,WACHe,QAAQC,IAAI,wDACZD,QAAQC,IAAI,kCAAoCC,KAAKC,UAAU,EAAKnB,a,6CAKtEgB,QAAQC,IAAI,8BAAgCC,KAAKC,UAAUX,KAAKR,QAChEQ,KAAKe,SAAS,CACZtB,QAASO,KAAKR,MAAMC,QAAU,KAEhCe,QAAQC,IAAI,6BAA+BC,KAAKC,UAAUX,KAAKR,U,0CAI/DgB,QAAQC,IAAI,2BAA6BC,KAAKC,UAAUX,KAAKR,QAC7DQ,KAAKe,SAAS,CACZtB,QAASO,KAAKR,MAAMC,QAAU,KAEhCe,QAAQC,IAAI,0BAA4BC,KAAKC,UAAUX,KAAKR,U,sCAG9CwB,GACU,MAApBA,EAASC,QAIbT,QAAQC,IAAI,6BAA+BC,KAAKC,UAAUX,KAAKR,QAC/DQ,KAAKe,SAAS,CACZtB,QAASO,KAAKR,MAAMC,QAAU,KAEhCe,QAAQC,IAAI,4BAA8BC,KAAKC,UAAUX,KAAKR,SAP5DgB,QAAQC,IAAI,uBAAyBO,EAASE,gB,GAhF1BC,IAAMC,WCiBnBC,MAff,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,6BAKF,cAAC,EAAD,QCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b858967.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\n//to show the aysnch nature of setstate.\r\nclass TestComponent extends React.Component {\r\n    constructor(...args) {\r\n      super(...args);\r\n      this.state = {\r\n        dollars: 10\r\n      };\r\n      this._saveButtonRef = (btn => { this._btnRef = btn });\r\n      [\r\n        '_onTimeoutHandler',\r\n        '_onMouseLeaveHandler',\r\n        '_onClickHandler',\r\n        '_onAjaxCallback',\r\n      ].forEach(propToBind => {\r\n        this[propToBind] = this[propToBind].bind(this);\r\n      });\r\n    }\r\n  \r\n    componentDidMount() {\r\n      // Add custom event via `addEventListener`\r\n      //\r\n      // The list of supported React events does include `mouseleave`\r\n      // via `onMouseLeave` prop\r\n      //\r\n      // However, we are not adding the event the `React way` - this will have\r\n      // effects on how state mutates\r\n      //\r\n      // Check the list here - https://reactjs.org/docs/events.html\r\n      this._btnRef.addEventListener('mouseleave', this._onMouseLeaveHandler);\r\n  \r\n      // Add JS timeout\r\n      //\r\n      // Again,outside React `world` - this will also have effects on how state\r\n      // mutates\r\n      setTimeout(this._onTimeoutHandler, 100);\r\n  \r\n      // Make AJAX request\r\n      fetch('https://api.github.com/users')\r\n        .then(this._onAjaxCallback);\r\n    }\r\n  \r\n    render() {\r\n      console.log('State in render: ' + JSON.stringify(this.state));\r\n  \r\n      return (\r\n         <button\r\n           ref={this._saveButtonRef}\r\n           onClick={this._onClickHandler}>\r\n           'Click me'\r\n        </button>\r\n      );\r\n    }\r\n  \r\n   _onClickHandler() {\r\n        console.log('State before (_onClickHandler): ' + JSON.stringify(this.state));\r\n        this.setState({\r\n        dollars: this.state.dollars + 10\r\n        }, () => {\r\n        console.log('Here state will always be updated to latest version!');\r\n        console.log('State after (_onClickHandler): ' + JSON.stringify(this.state));\r\n        });\r\n     }\r\n  \r\n    _onMouseLeaveHandler() {\r\n      console.log('State before (mouseleave): ' + JSON.stringify(this.state));\r\n      this.setState({\r\n        dollars: this.state.dollars + 20\r\n      });\r\n      console.log('State after (mouseleave): ' + JSON.stringify(this.state));\r\n    }\r\n  \r\n    _onTimeoutHandler() {\r\n      console.log('State before (timeout): ' + JSON.stringify(this.state));\r\n      this.setState({\r\n        dollars: this.state.dollars + 30\r\n      });\r\n      console.log('State after (timeout): ' + JSON.stringify(this.state));\r\n    }\r\n  \r\n    _onAjaxCallback(response) {\r\n      if (response.status !== 200) {\r\n        console.log('Error in AJAX call: ' + response.statusText);\r\n        return;\r\n      }\r\n      console.log('State before (AJAX call): ' + JSON.stringify(this.state));\r\n      this.setState({\r\n        dollars: this.state.dollars + 40\r\n      });\r\n      console.log('State after (AJAX call): ' + JSON.stringify(this.state));\r\n    }\r\n\r\n}\r\n\r\nexport default TestComponent;","import logo from './logo.svg';\nimport './App.css';\nimport TestComponent from './SetState/TestComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        \n      </header>\n      <TestComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}